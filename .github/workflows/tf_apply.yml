### Reusable workflow to download terraform artifact built by `tf_plan` and apply the artifact/plan ###
### Based on: https://github.com/Pwd9000-ML/Azure-Terraform-Deployments

name: "Build TF Plan"
on:
  workflow_call:
    inputs:
      path:
        description: 'Specifies the path of the root terraform module.'
        required: true
        type: string
      tf_version:
        description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
        required: false
        type: string
        default: latest
      environment:
        description: 'Specifies the GitHub deployment environment.'
        required: false
        type: string
      tf_key:
        description: 'Specifies the Terraform state file name for this plan. Workflow artifact will use same name'
        required: true
        type: string
      tf_vars_file:
        description: 'Specifies the Terraform TFVARS file.'
        required: true
        type: string    
    secrets:
      AWS_ACCOUNT:
        description: 'Specifies the AWS account name.'
        required: true
      AWS_ACCOUNT_ID:
        description: 'Specifies the AWS account ID.'
        required: true
      AWS_REGION:
        description: 'Specifies the AWS region.'
        required: true
      BUCKET_TF_STATE:
        description: 'Specifies the Terraform remote state S3 bucket.'
        required: true
      DEPLOY_ROLE:
        description: 'Specifies the AWS deployment role.'
        required: true

jobs:
  apply-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.path }}
    env:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
      DEPLOY_ROLE: ${{ secrets.DEPLOY_ROLE }}      

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.tf_key }}
          path: ${{ inputs.path }}

      - name: Decompress TF Plan artifact
        run: unzip ${{ inputs.tf_key }}.zip

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.tf_version }}
          terraform_wrapper: false
      
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform Apply
        run: terraform apply plan.tfplan