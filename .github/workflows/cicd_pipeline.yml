name: "Terraform CI/CD"
 
on:
 push:
   branches:
   - main
  #  paths:
  #  - terraform/**
 pull_request:
   branches:
   - main
  #  paths:
  #  - terraform/**

permissions:
  id-token: write
  contents: read

jobs:
 deploy-to-staging:
   name: "Terraform Staging Deployment"
   runs-on: ubuntu-latest
   environment: staging
   defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       working-directory: ./terraform/staging
 
   steps:
    - name: Checkout repo
      uses: actions/checkout@v2
 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.DEPLOY_ROLE }}
        aws-region: eu-west-2
        role-session-name: OIDCSession

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7    
        terraform_wrapper: false
    
    - name: Terraform init
      run: terraform init -backend-config="bucket=${{ secrets.BUCKET_TF_STATE }}"
    
    - name: Terraform format
      run: terraform fmt -check -diff -recursive
    
    - name: Terraform validate
      run: terraform validate -no-color

    - name: Terraform plan       
      if: github.event_name == 'pull_request'
      run: terraform plan -var="account_name=${{ secrets.AWS_ACCOUNT }}" -var="account_name=${{ secrets.AWS_ACCOUNT_ID }}" -no-color -input=false
      continue-on-error: true
  
    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `${ "${{ steps.terraform_fmt.outcome }}" == "success" ? "\u2714" : "\u274c" } Terraform Format and Style üñå
          ${ "${{ steps.terraform_init.outcome }}" == "success" ? "\u2714" : "\u274c" } Terraform Initialization ‚öôÔ∏è
          ${ "${{ steps.terraform_plan.outcome }}" == "success" ? "\u2714" : "\u274c" } Terraform Plan üìñ
          ${ "${{ steps.terraform_validate.outcome }}" == "success" ? "\u2714" : "\u274c" } Terraform Validation ü§ñ

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false